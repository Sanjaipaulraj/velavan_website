---
import { Image } from 'astro:assets';

const navItems = [
  { name: 'Home', href: '/index' },
  { name: 'About Us', href: '/about' },
  { name: 'Products', href: '/product' },
  { name: 'Services', href: '/service' },
  { name: 'Branches', href: '/branch' },
  { name: 'Contact Us', href: '/contact' },
];
---

<header class="sticky top-0 z-50 w-full bg-white/80 backdrop-blur-md border-b border-gray-400" role="banner">
  <div class="container-custom flex items-center justify-between h-20">
    <a href="/" class="flex items-center transition-transform duration-300 hover:scale-105 focus:scale-105 focus:outline-none focus:ring-2 focus:ring-red focus:ring-offset-2 rounded" aria-label="Velavan home">
      <Image src='/logo.png' alt="Velavan Medicals" width={90} height={20} class="transition-all duration-300 hover:brightness-110 focus:brightness-110" />
    </a>
    
    <!-- Desktop Nav -->
    <nav class="hidden md:flex items-center space-x-8" role="navigation" aria-label="Main navigation">
      {navItems.map(item => (
        <a 
          href={item.href} 
          class="text-gray-700 hover:text-red focus:text-red transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-red focus:ring-offset-2 rounded px-2 py-1"
        >
          {item.name}
        </a>
      ))}
    </nav>
    
    <div class="hidden md:flex items-center space-x-4">
      <a href="stafflogin" class="hidden md:inline-block text-dark hover:text-red focus:text-red transition-all duration-300 relative focus:outline-none" target="_blank">
        Staff logIn
        <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-red transition-all duration-300 group-hover:w-full"></span>
      </a>
      <a href="/contact" class="hidden md:inline-block btn btn-primary focus:outline-none focus:ring-2 focus:ring-red focus:ring-offset-2">Hotline 044-3500 1063</a>
      
      <button 
        id="menu-toggle" 
        class="md:hidden flex items-center transition-transform duration-300 focus:outline-none focus:ring-2 focus:ring-red focus:ring-offset-2 rounded p-1" 
        aria-label="Toggle navigation menu"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <img id="menu-icon" src="/hamburger.png" alt="Menu Icon" class="h-6 w-6" />
      </button>

    </div>
  </div>
  
  <!-- Mobile Menu -->
  <nav id="mobile-menu" class="hidden md:hidden bg-white w-full border-t border-gray-100" role="navigation" aria-label="Mobile navigation">
    <div class="container-custom py-4 space-y-4">
      {navItems.map((item, index) => (
        <a 
          href={item.href} 
          class="block py-2 px-2 text-gray-700 hover:text-red focus:text-red transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-red focus:ring-offset-2 rounded"
          style={`transition-delay: ${index * 50}ms;`}
        >
          {item.name}
        </a>
      ))}
      <a href="stafflogin" class="block py-2 px-2 text-gray-700 hover:text-red focus:text-red transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-red focus:ring-offset-2 rounded" target="_blank">Staff logIn</a>
    </div>
  </nav>
</header>

<script is:inline>
  function initMobileToggle() {
    const toggleBtn = document.getElementById('menu-toggle');
    const menuIcon = document.getElementById('menu-icon');
    const mobileMenu = document.getElementById('mobile-menu');

    if (!toggleBtn || !menuIcon || !mobileMenu) return;

    const newToggle = toggleBtn.cloneNode(true);
    toggleBtn.replaceWith(newToggle);

    const newMenuIcon = newToggle.querySelector('#menu-icon');

    newToggle.addEventListener('click', () => {
      const isHidden = mobileMenu.classList.contains('hidden');

      if (isHidden) {
        mobileMenu.classList.remove('hidden');
        mobileMenu.classList.add('mobile-menu-open');
        mobileMenu.classList.remove('mobile-menu-closing');
        newMenuIcon.src = "/cross.png";
        newMenuIcon.alt = "Close Menu Icon";
      } else {
        mobileMenu.classList.add('mobile-menu-closing');
        mobileMenu.classList.remove('mobile-menu-open');
        setTimeout(() => {
          mobileMenu.classList.add('hidden');
        }, 300);
        newMenuIcon.src = "/hamburger.png";
        newMenuIcon.alt = "Menu Icon";
      }

      newToggle.setAttribute('aria-expanded', (!isHidden).toString());
      newToggle.classList.toggle('menu-open');
    });
  }

  initMobileToggle();
  document.addEventListener('astro:page-load', initMobileToggle);
</script>