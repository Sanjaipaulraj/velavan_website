<!-- ---
import { ClientRouter, ViewTransitions } from 'astro:transitions';
import { getImage } from 'astro:assets';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

interface Props {
  title: string;
  description?: string;
}

const { 
  title, 
  description = "Velavan medical Website"
} = Astro.props;

const faviconImg = await getImage({src: '/logo.png', width: 32, height: 32});
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href={faviconImg.src} />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ClientRouter />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "Velavan Medicals",
        "url": "www.velavanmedical.com",
        "logo": "https://velevanmedical.com/public/logo.png",
        
      }
    </script>
    
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:image" content="https://velavanmedical.com/public/logo.png" />
    
  </head>
	<body class="min-h-screen flex flex-col">
    <a href="#main-content" class="skip-link">Skip to main content</a>
    <Header />
    <main id="main-content" class="flex-grow">
      <slot />
    </main>
    <Footer />

	<script>
      document.addEventListener('astro:page-load', () => {
        const animatedElements = document.querySelectorAll('.animate-on-scroll');
        
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('animated');
              observer.unobserve(entry.target);
            }
          });
        }, { threshold: 0.1 });
        
        animatedElements.forEach(element => {
          observer.observe(element);
        });
      });
    </script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style> -->

---
import { ClientRouter } from 'astro:transitions';
import { getImage } from 'astro:assets';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

interface Props {
  title: string;
  description?: string;
}

const { 
  title, 
  description = "Velavan Medical Website"
} = Astro.props;

const faviconImg = await getImage({src: '/logo.png', width: 32, height: 32});
---

<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/svg+xml" href={faviconImg.src} />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  <ClientRouter />
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Organization",
      "name": "Velavan Medicals",
      "url": "https://www.velavanmedical.com",
      "logo": "https://velevanmedical.com/public/logo.png"
    }
  </script>
</head>
<body class="min-h-screen flex flex-col">
  <a href="#main-content" class="skip-link">Skip to main content</a>
  <Header />
  <main id="main-content" class="flex-grow">
    <slot />
  </main>
  <Footer />
  
  <script>
    document.addEventListener('astro:page-load', () => {
      const animatedElements = document.querySelectorAll('.animate-on-scroll');
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animated');
            observer.unobserve(entry.target);
          }
        });
      }, { threshold: 0.1 });
      
      animatedElements.forEach(element => {
        observer.observe(element);
      });
    });
  </script>
</body>
</html>