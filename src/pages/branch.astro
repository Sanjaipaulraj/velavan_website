---
import Layout from "../layouts/Layout.astro";

const response = await fetch('https://res.cloudinary.com/dhgniyaiy/raw/upload/v1758968871/content_vmh6za.json');
const data = await response.json();

const icon = data.branches.icon; 
const branches = data.branches.branchDetails;  
---

<Layout title="Velavan Medical | branches" description="Our branches.">
  <script type="module" src="/scripts/animations.js"></script>

  <div class="p-4">
    <div class="widget-imgcontainer">
      <h2 class="pt-4 font-bold sm:text-3xl md:text-4xl lg:text-5xl">Our Branches</h2>
      <p class="pt-5 pb-3 font-semibold">
        Velavan Medical has a network of branches across key locations, offering high-quality medical supplies and equipment. Each branch is committed to providing exceptional service
        <br>
        and ensuring the best healthcare products for our customers..
      </p>
    </div>

    <section class="centered-section md:py-4 sm:py-2 lg:py-8">
      <div class="container-custom relative">
        <div>
          {branches.map((branch: { branch: string; address: string; img: string }) => (
            <div class="pt-10">
              <img src={icon} alt="Location Icon" class="h-12 w-12 pb-6" />
              <h1 class="text-blue">{branch.branch}</h1>
              <p>Address: {branch.address}</p>
              <img
                src={branch.img} 
                alt={branch.branch}
                class="w-full pt-5 h-auto rounded-lg transition-all duration-500"
              />
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Animation script -->
    <script>
      document.addEventListener("astro:page-load", () => {
        const cards = document.querySelectorAll(".branch-card");

        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add("slide-in-visible");
              observer.unobserve(entry.target);
            }
          });
        }, {
          threshold: 0.1
        });

        cards.forEach(card => observer.observe(card));
      });
    </script>
  </div>
</Layout>